{"version":3,"sources":["api/api.js","App.js","reportWebVitals.js","index.js"],"names":["url","api","axios","create","baseURL","App","useState","value","setValue","useEffect","a","get","data","console","log","fetchData","handleSubmit","post","name","className","onChange","e","target","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAEIA,E,wFAKAA,EAAM,MAEV,IAIeC,E,OAJHC,EAAMC,OAAO,CACrBC,QAASJ,I,OCwBEK,MA9Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACGT,EAAIU,IAAI,WADX,OACVC,EADU,OAEhBC,QAAQC,IAAIF,GAFI,2CAAH,qDAIfG,MAGF,IAAMC,EAAY,uCAAG,sBAAAN,EAAA,sEACbT,EAAIgB,KAAK,UAAW,CAAEC,KAAMX,IADf,2CAAH,qDAIlB,OACE,sBAAKY,UAAU,MAAf,UACE,uBACEC,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOf,QACnCA,MAAOA,EACPgB,KAAK,SAEP,wBACEC,QAASR,EADX,wBCdSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94ba259f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet url;\r\nif (process.env.NODE_ENV === 'development') {\r\n    url = 'http://localhost:5000/api'\r\n}\r\nif (process.env.NODE_ENV === 'production') {\r\n    url = 'api'\r\n}\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport default api;\r\n","import './App.css';\nimport api from './api/api';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await api.get('clients');\n      console.log(data);\n    };\n    fetchData();\n  })\n\n  const handleSubmit = async () => {\n    await api.post('clients', { name: value })\n  }\n\n  return (\n    <div className=\"App\">\n      <input\n        onChange={(e) => setValue(e.target.value)}\n        value={value}\n        type='text'\n      ></input>\n      <button\n        onClick={handleSubmit}\n      >Submit</button>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}